test class stateandbehavior.Calc1 {
	double getValue()
	void setValue(double value)
	void add(double value)
	void subtract(double value)
	void multiply(double value)
	void divide(double value)
	void percent(double value)
	void negate()
	void pi()
}

sequence constructor "KonstruktÃ¸r" {
	-->
	state { value == 0.0d; }
}

sequence setValue "Sett verdi" {
	val double random = Math.random * 100
	"Sett verdi til et tilfeldig tall" -- value = random -->
	state { value == random; }
}

sequence add "Addisjon" {
	val double random1 = Math.random * 100, double random2 = Math.random * 100
	"Addisjon med to tilfeldige tall" -- value = random1, add(random2) -->
	state { value == random1 + random2; }
}

sequence subtract "Subtraksjon" {
	val double random1 = Math.random * 100, double random2 = Math.random * 100
	"Subtraksjon med to tilfeldige tall" -- value = random1, subtract(random2) -->
	state { value == random1 - random2; }
}

sequence multiply "Multiplikasjon" {
	val double random1 = Math.random * 100, double random2 = Math.random * 100
	"Multiplikasjon med to tilfeldige tall" -- value = random1, multiply(random2) -->
	state { value == random1 * random2; }
}

sequence divide "Divisjon" {
	val double random1 = Math.random * 100, double random2 = Math.random * 100 + 1
	"Divisjon med to tilfeldige tall" -- value = random1, divide(random2) -->
	state { value == random1 / random2; }
}

sequence percent "Prosent" {
	val double random1 = Math.random * 100, double random2 = Math.random * 100
	"Tilfeldig prosent av et tilfeldige tall" -- value = random1, percent(random2) -->
	state { value == random1 * random2 / 100; }
}

sequence negate "Negasjon" {
	val double random1 = Math.random * 100
	"Negasjon av et tilfeldige tall" -- value = random1, negate -->
	state { value == -random1; }
}

sequence pi "Pi" {
	-- pi -->
	state { value == Math.PI; }
}

method == (double d1, double d2) {
    val epsilon = 0.000001d
	d1 - epsilon < d2 && d1 + epsilon > d2
}
